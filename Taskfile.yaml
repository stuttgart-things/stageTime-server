---
version: 3
vars:
  PROJECT_NAME:
    sh: echo ${PWD##*/}
  REPOSITORY_NAME: stuttgart-things
  MODULE: github.com/{{ .REPOSITORY_NAME }}/{{ .PROJECT_NAME }}
  REGISTRY: eu.gcr.io
  LOCAL_BIN_SERVER_PORT: 50051
  LOCAL_CONTAINER_SERVER_PORT: 8011
  DEV_INGRESS_URL: stagetime.teasle.sthings.tiab.ssc.sva.de:443
  DATE:
    sh: date +"%y.%m%d.%H%M"
  GIT_COMMIT:
    sh: git log -n 1 --format=%h
  UPDATED_TAG:
    sh: old_tag=$(git describe --tags --abbrev=0 | cut -d "." -f3 | cut -d "-" -f1); new_tag=$((old_tag+1)); echo $new_tag
  UPDATED_TAG_VERSION:
    sh: t1=$(git describe --tags --abbrev=0 | cut -f1 -d'.'); t2=$(git describe --tags --abbrev=0 | cut -f2 -d'.'); echo $t1.$t2.{{ .UPDATED_TAG }}
  BRANCH:
    sh: if [ $(git rev-parse --abbrev-ref HEAD) != "main" ]; then echo -$(git rev-parse --abbrev-ref HEAD) ; fi

tasks:
  lint:
    desc: Lint code
    cmds:
      - cmd: golangci-lint run
        ignore_error: true

  build-server:
    desc: Build server
    deps: [lint, proto]
    cmds:
      - go mod tidy
      - CGO_ENABLED=0
      - GOOS=linux
      - go install -ldflags="-X {{ .MODULE }}/internal.version=v{{ .UPDATED_TAG_VERSION }} -X {{ .MODULE }}/internal.date={{ .DATE }} -X {{ .MODULE }}/internal.commit={{ .GIT_COMMIT }}"

  git-push:
    desc: Commit & push the module
    cmds:
      - go mod tidy
      - git pull
      - git config advice.addIgnoredFile false
      - git add *
      - git commit -am 'updated {{ .PROJECT_NAME }} {{ .DATE }} for tag version {{ .UPDATED_TAG_VERSION }}{{ .BRANCH }}'
      - git push

  build:
    desc: Build the app
    deps: [lint, proto]
    cmds:
      - go mod tidy
      - CGO_ENABLED=0
      - GOOS=linux
      - go install -ldflags="-X {{ .MODULE }}/internal.date={{ .DATE }} -X {{ .MODULE }}/internal.version={{ .UPDATED_TAG_VERSION }} -X {{ .MODULE }}/internal.commit={{ .GIT_COMMIT }}"
      - "{{ .PROJECT_NAME }}"

  proto:
    desc: Generate Go code from proto
    cmds:
      - protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative revisionrun/*.proto

  build-image:
    desc: Build container image
    deps: [build-server]
    cmds:
      - sudo nerdctl build -t {{ .REGISTRY }}/{{ .REPOSITORY_NAME }}/{{ lower (.PROJECT_NAME) }}:{{ .DATE }}-{{ .UPDATED_TAG_VERSION }} --build-arg VERSION={{ .UPDATED_TAG_VERSION }} --build-arg BUILD_DATE={{ .DATE }} --build-arg COMMIT={{ .GIT_COMMIT }} .
      - sudo nerdctl push {{ .REGISTRY }}/{{ .REPOSITORY_NAME }}/{{ lower (.PROJECT_NAME) }}:{{ .DATE }}-{{ .UPDATED_TAG_VERSION }}

  run-server:
    desc: Run server locally
    deps: [build-server]
    cmds:
      - "{{ .PROJECT_NAME }}"
    env:
      SERVER_PORT: "{{ .LOCAL_SERVER_PORT }}"

  run-client:
    desc: Run client locally
    deps: [build-server]
    cmds:
      - go run client/client.go
    env:
      SERVER_PORT: "{{ .LOCAL_CONTAINER_SERVER_PORT }}"
      GRPC_GO_LOG_VERBOSITY_LEVEL: 99
      GRPC_GO_LOG_SEVERITY_LEVEL: info
      STAGE_TIME_URL: "{{ .DEV_INGRESS_URL }}"

  run-container:
    desc: Run container image
    deps: [build-image]
    cmds:
      - nerdctl run -e SERVER_PORT={{ .LOCAL_CONTAINER_SERVER_PORT }} -p {{ .LOCAL_CONTAINER_SERVER_PORT }}:{{ .LOCAL_CONTAINER_SERVER_PORT }}  {{ .REGISTRY }}/{{ .PROJECT_NAME }}/{{ .PROJECT_NAME }}:{{ .DATE }}

  tag:
    desc: Commit, push & tag the module
    deps: [lint, proto]
    cmds:
      - task: git-push
      - rm -rf dist
      - go mod tidy
      - git pull --tags
      - git tag -a {{ .UPDATED_TAG_VERSION }}{{ .BRANCH }} -m 'updated for stuttgart-things {{ .DATE }} for tag version {{ .UPDATED_TAG_VERSION }}{{ .BRANCH }}'
      - git push origin --tags

  push:
    desc: Commit & push the app
    deps: [tag, build-server, push-chart]
    cmds:
      - git pull
      - git add *
      - |
        echo "Enter COMMIT_MESSAGE:"
        read COMMIT_MESSAGE;
        git commit -am "${COMMIT_MESSAGE} for {{ .UPDATED_TAG_VERSION }}"
      - git push

  git-push:
    desc: Commit & push the module
    cmds:
      - go mod tidy
      - git pull
      - git config advice.addIgnoredFile false
      - git add *
      - git commit -am 'updated {{ .PROJECT_NAME }} {{ .DATE }} for tag version {{ .UPDATED_TAG_VERSION }}{{ .BRANCH }}'
      - git push

  package:
    desc: Update Chart.yaml and package archive
    cmds:
      - cd ./helm/{{ .PROJECT_NAME }} && helm dep update
      - git add ./helm/*/*
      - yq e -i '.version = "{{ .UPDATED_TAG_VERSION }}"' ./helm/*/Chart.yaml
      - "sed -i 's/appVersion: .*/appVersion: {{ .UPDATED_TAG_VERSION }}/g' ./helm/*/Chart.yaml"
      - yq e -i '.deployment.containers.{{ .PROJECT_NAME }}.tag = "{{ .DATE }}-{{ .UPDATED_TAG_VERSION }}"' ./helm/*/values.yaml
      - helm package ./helm/*/

  push:
    desc: Push to registry
    deps: [build-image, package]
    cmds:
      - helm push {{ lower (.PROJECT_NAME) }}-{{ .UPDATED_TAG_VERSION }}.tgz oci://{{ .REGISTRY }}/{{ .REPOSITORY_NAME }}
      - rm -rf {{ lower (.PROJECT_NAME) }}-{{ .UPDATED_TAG_VERSION }}.tgz
      - task: git-push
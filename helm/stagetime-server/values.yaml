namespace: stagetime
configmaps:
  yas-configuration:
    PIPELINE_WORKSPACE: stagetime-tekton
deployment:
  name: stagetime-server
  labels:
    app: stagetime-server
  selectorLabels:
    app: stagetime-server
  ports:
    app-port:
      containerPort: 50051
      protocol: TCP
  allowPrivilegeEscalation: "false"
  privileged: "false"
  runAsNonRoot: "false"
  readOnlyRootFilesystem: "true"
  serviceAccount: stagetime-server
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi
  containers:
    stagetime-server:
      image: eu.gcr.io/stuttgart-things/stagetime-server
      replicaCount: 1
      imagePullPolicy: Always
      tag: 23.0622.1132-0.3.11
      securityContext:
        capabilities: {}
secrets:
  redis-connection:
    name: redis-connection
    labels:
      app: stagetime-server
    dataType: data
    secretKVs:
      REDIS_SERVER: MTAuMzEuMTAxLjEzOA==
      REDIS_PORT: NjM3OQ==
      REDIS_PASSWORD: QXRsYW43aXM=
      REDIS_QUEUE: cmVkaXNxdWV1ZTp5YWNodC1yZXZpc2lvbnJ1bnM=
services:
  stagetime-server:
    labels:
      app: stagetime-server
    ports:
      - name: yas-port
        protocol: TCP
        value: 50051
        expose:
          service:
            type: ClusterIP
            port: 80
    selectorLabels:
      app: stagetime-server
customresources:
  yas-ingress-certificate:
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      name: stagetime-server-ingress
      labels:
        app: stagetime-server
    spec:
      commonName: yas.app.sthings.tiab.ssc.sva.de
      dnsNames:
        - yas.app.sthings.tiab.ssc.sva.de
      issuerRef:
        name: cluster-issuer-ssc #cluster-issuer-approle
        kind: ClusterIssuer
      secretName: stagetime-server-ingress-tls
ingress:
  stagetime-server:
    labels:
      app: stagetime-server
    name: stagetime-server
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    service:
      name: stagetime-server-service
      port: 80
      path: /
      pathType: Prefix
    hostname: yas
    # clusterName: dev
    domain: app.sthings.tiab.ssc.sva.de
    tls:
      secretName: stagetime-server-ingress-tls
      host: yas.app.sthings.tiab.ssc.sva.de
# RBAC
serviceAccounts:
  stagetime-server:
    labels:
      app: stagetime-server
roles:
  stagetime-server:
    labels:
      app: stagetime-server
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
        verbs:
          - get
          - list
          - watch
          - create
roleBindings:
  stagetime-server:
    labels:
      app: stagetime-server
    roleRef:
      kind: Role
      name: stagetime-server
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: stagetime-server
        namespace: stagetime
clusterRoles:
  list-all-namespaces:
    labels:
      app: stagetime-server
    rules:
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - get
          - list
clusterRoleBindings:
  list-all-namespaces-yas:
    roleRef:
      kind: ClusterRole
      name: list-all-namespaces
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: stagetime-server
        namespace: stagetime
